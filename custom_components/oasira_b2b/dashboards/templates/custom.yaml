light_tile:
    show_name: true
    show_icon: true
    show_label: true
    show_state: false
    hold_action:
      action: more-info
    label: |
      [[[
        var b = Math.round(entity.attributes.brightness / 255 * 100);
        return entity.attributes.brightness > 0 ? `${b}%` : `Off`;
      ]]]
    custom_fields:
      icon1: |
        [[[
          var i = entity.attributes.icon;
          return `<ha-icon icon='${i}'></ha-icon>`
        ]]]
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return entity.entity_id ]]]'
          colorMode: brightness
          styles:
            container:
              - background: none
              - border-radius: 100px
              - overflow: visible
            card:
              - height: 16px
              - padding: 0 8px
              - background: |
                  [[[
                    return entity.state == "on"
                      ? "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)"
                      : "transparent";
                  ]]]
            track:
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[
                    if (entity.state == "on") return "var(--black)";
                    else return "var(--contrast8)";
                  ]]]
              - height: 12px
              - width: 12px
              - border-radius: 10px
              - top: 2px
              - right: '-8px'
    extra_styles: |
      @keyframes fountain {
        0%, 100 { clip-path: polygon(0 100%, 0 0, 100% 0, 100% 100%); }
        50% { clip-path: polygon(0 100%, 0 47%, 100% 47%, 100% 100%); }
        60% { clip-path: polygon(0 100%, 100% 100%, 100% 37%, 79% 36%, 71% 21%, 56% 25%, 44% 25%, 31% 20%, 20% 36%, 0 36%); }
        70% { clip-path: polygon(0 100%, 100% 100%, 100% 36%, 79% 36%, 71% 22%, 81% 1%, 24% 0, 31% 21%, 20% 36%, 0 36%); }
        80% { clip-path: polygon(0 100%, 100% 100%, 100% 36%, 79% 36%, 76% 28%, 100% 0, 0 0, 23% 28%, 20% 36%, 0 36%); }
      }
    styles:
      grid:
        - grid-template-areas: '"icon1 ." "n l" "slider slider"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      card:
        - background: var(--ha-card-background)
        - padding: 16px
        - '--mdc-ripple-press-opacity': 0
      img_cell:
        - position: absolute
        - top: 20%
        - left: 40%
      icon:
        - width: 20em
        - opacity: 20%
        - color: |
            [[[
              return entity.state == 'on' ? 'var(--black)' : 'var(--contrast9)';
            ]]]
        - transform: rotate(-20deg)
      label:
        - text-align: right
        - font-size: 14px
        - justify-self: end
        - align-self: end
        - margin: 4px 0 12px 0
      name:
        - justify-self: start
        - font-size: 14px
        - font-weight: 500
        - margin: 4px 0 12px 0
        - color: var(--contrast8)
      custom_fields:
        icon1:
          - justify-self: start
          - width: 24px
          - color: |
              [[[
                return entity.state == 'on' ? 'var(--black)' : 'var(--contrast20)';
              ]]]
    state:
      - value: 'on'
        styles:
          card:
            - background: |
                [[[
                  const color = entity.attributes?.rgb_color;
                  if (!color) return 'var(--yellow)';
                  return 'rgba(' + color + ')';
                ]]]
          name:
            - color: var(--black)
          label:
            - color: var(--black)
      - value: 'off'
        styles:
          name:
            - color: var(--contrast20)
          label:
            - color: var(--contrast12)


# Example usage:
#- type: custom:button-card
#  template: tile_power_card
#  entity: switch.media_centre
#  variables:
#    power_sensor: sensor.media_centre_power

fan_control_card:
  show_icon: false
  styles:
    card:
      - border-radius: 25px
      - border-style: none
      - box-shadow: 0px 0px 10px -9px black
    grid:
      - grid-template-areas: '"icon_cells" "n" "button"'
      - grid-template-columns: 1fr
      - grid-template-rows: 1fr min-content min-content
    custom_fields:
      icon_cells:
        - justify-self: start
        - margin-top: 12px
        - margin-left: 15px
    name:
      - font-size: 90%
      - font-weight: bold
      - justify-self: start
      - margin-top: 6px
      - margin-left: 15px
  custom_fields:
    icon_cells: |
      [[[
        return `<ha-icon
          icon="mdi:fan"
          style="width: 25px; height: 25px; color: auto;">
        </ha-icon>`;
      ]]]
    button:
      card:
        type: custom:button-card
        entity: '[[[ return variables.switch_entity ]]]'
        show_icon: false
        show_name: false
        styles:
          card:
            - border-style: none
            - margin-top: '-4%'
            - margin-bottom: '-5%'
            - background-color: transparent
          grid:
            - grid-template-areas: '"state icon_cells"'
            - grid-template-columns: min-content 1fr
            - grid-template-rows: min-content
          custom_fields:
            state:
              - justify-self: start
              - align-self: middle
              - font-size: 12px
              - filter: opacity(50%)
              - margin-left: 15px
              - margin-top: 1.6px
            icon_cells:
              - justify-self: end
              - align-self: start
              - margin-right: 15px
              - width: 45px
        custom_fields:
          icon_cells: |
            [[[
              var state = states[variables.switch_entity].state;
              if (state == "on")
                return `<ha-icon
                  icon="mdi:toggle-switch"
                  style="color: #59CE8F;">
                </ha-icon>`;
              else
                return `<ha-icon
                  icon="mdi:toggle-switch-off"
                  style="color: auto;">
                </ha-icon>`;
            ]]]
          state: |
            [[[
              var state = states[variables.switch_entity].state;
              var power = states[variables.power_sensor]?.state;
              if (state == "on")
                return `<span>${power}W</span>`;
              else
                return `<span>Desligado</span>`;
            ]]]

# Example usage:
#- type: custom:button-card
#  template: fan_control_card
#  entity: switch.ventoinha
#  name: Ventoinha
#  variables:
#    switch_entity: switch.ventoinha
#    power_sensor: sensor.ventoinha_power



general_tile_card:
  show_icon: true
  show_name: true
  show_state: true
  tap_action:
    action: toggle
  hold_action:
    action: more-info
  styles:
    card:
      - border-radius: 20px
      - border-style: none
      - box-shadow: 0px 0px 10px -6px rgba(0, 0, 0, 0.4)
      - padding: 16px
      - background-color: var(--card-background-color, var(--contrast2))
      - transition: all 0.3s ease
    grid:
      - grid-template-areas: '"i n" "i s"'
      - grid-template-columns: 40px 1fr
      - grid-template-rows: auto auto
      - column-gap: 12px
    icon:
      - width: 32px
      - height: 32px
      - color: |
          [[[
            return entity.state === 'on' || entity.state === 'open' || entity.state === 'unlocked'
              ? 'var(--green)'
              : 'var(--contrast8)';
          ]]]
    name:
      - justify-self: start
      - font-size: 14px
      - font-weight: 500
      - color: |
          [[[
            return entity.state === 'on' || entity.state === 'open' || entity.state === 'unlocked'
              ? 'var(--primary-text-color)'
              : 'var(--contrast20)';
          ]]]
      - align-self: end
    state:
      - justify-self: start
      - font-size: 12px
      - color: |
          [[[
            return entity.state === 'on' || entity.state === 'open' || entity.state === 'unlocked'
              ? 'var(--primary-text-color)'
              : 'var(--contrast15)';
          ]]]
      - align-self: start
  state:
    - value: 'on'
      styles:
        card:
          - background-color: var(--green)
        icon:
          - color: var(--black)
        name:
          - color: var(--black)
        state:
          - color: var(--black)
    - value: 'open'
      styles:
        card:
          - background-color: var(--green)
        icon:
          - color: var(--black)
        name:
          - color: var(--black)
        state:
          - color: var(--black)
    - value: 'unlocked'
      styles:
        card:
          - background-color: var(--green)
        icon:
          - color: var(--black)
        name:
          - color: var(--black)
        state:
          - color: var(--black)

general_tile_security_card:
  show_icon: true
  show_name: true
  show_state: true
  tap_action:
    action: toggle
  hold_action:
    action: more-info
  styles:
    card:
      - border-radius: 20px
      - border-style: none
      - box-shadow: 0px 0px 10px -6px rgba(0, 0, 0, 0.4)
      - padding: 16px
      - background-color: var(#D6EAF8, var(--contrast2))
      - transition: all 0.3s ease
    grid:
      - grid-template-areas: '"i n" "i s"'
      - grid-template-columns: 40px 1fr
      - grid-template-rows: auto auto
      - column-gap: 12px
    icon:
      - width: 32px
      - height: 32px
      - color: |
          [[[
            return entity.state === 'on' || entity.state === 'open' || entity.state === 'unlocked'
              ? '#D6EAF8'
              : 'var(--contrast8)';
          ]]]
    name:
      - justify-self: start
      - font-size: 14px
      - font-weight: 500
      - color: |
          [[[
            return entity.state === 'on' || entity.state === 'open' || entity.state === 'unlocked'
              ? 'var(--primary-text-color)'
              : 'var(--contrast20)';
          ]]]
      - align-self: end
    state:
      - justify-self: start
      - font-size: 12px
      - color: |
          [[[
            return entity.state === 'on' || entity.state === 'open' || entity.state === 'unlocked'
              ? 'var(--primary-text-color)'
              : 'var(--contrast15)';
          ]]]
      - align-self: start
  state:
    - value: 'on'
      styles:
        card:
          - background-color: '#D6EAF8'
        icon:
          - color: var(--black)
        name:
          - color: var(--black)
        state:
          - color: var(--black)
    - value: 'open'
      styles:
        card:
          - background-color: '#D6EAF8'
        icon:
          - color: var(--black)
        name:
          - color: var(--black)
        state:
          - color: var(--black)
    - value: 'unlocked'
      styles:
        card:
          - background-color: '#D6EAF8'
        icon:
          - color: var(--black)
        name:
          - color: var(--black)
        state:
          - color: var(--black)

#- type: custom:button-card
#  template: general_tile_card
#  entity: light.living_room
#  name: Living Room Light
#  icon: mdi:ceiling-light

voice_assistant_tile:
  show_name: true
  show_label: true
  show_icon: true
  show_entity_picture: true
  tap_action:
    action: more-info
  icon: mdi:microphone-message
  styles:
    card:
      - height: 125px
      - width: 150px
      - border-radius: 20px
      - box-shadow: 0px 0px 10px -6px rgba(0, 0, 0, 0.4)
      - padding: 16px
      - background-color: var(--card-background-color, var(--contrast2))
      - transition: all 0.3s ease
    grid:
      - grid-template-areas: '"i" "n" "l"'
      - grid-template-columns: 1fr
      - grid-template-rows: auto auto auto
      - row-gap: 4px
    name:
      - font-size: 14px
      - font-weight: 500
      - text-align: center
      - color: var(--contrast8)
    label:
      - font-size: 12px
      - text-align: center
      - color: var(--contrast15)
    icon:
      - width: 28px
      - height: 28px
      - color: var(--contrast20)
    entity_picture:
      - width: 42px
      - height: 42px
      - border-radius: 50%
      - align-self: center
      - justify-self: center
  label: |
    [[[
      if (entity.state === 'listening') return 'Listening...';
      else if (entity.state === 'processing') return 'Processing...';
      else if (entity.state === 'responding') return 'Responding...';
      else return 'Idle';
    ]]]
  name: |
    [[[ return entity.attributes.friendly_name ]]]

#  type: custom:button-card
#  template: voice_assistant_tile
#  entity: assist_pipeline.default
#  entity_picture: /local/assist_pipeline.default.jpg

person_presence_tile:
  show_name: true
  show_label: true
  show_icon: true
  show_entity_picture: true
  icon: mdi:account
  tap_action:
    action: more-info
  styles:
    card:
      - height: 125px
      - width: 150px
      - border-radius: 20px
      - box-shadow: 0px 0px 10px -6px rgba(0, 0, 0, 0.4)
      - padding: 16px
      - background-color: var(--card-background-color, var(--contrast2))
      - transition: all 0.3s ease
    grid:
      - grid-template-areas: '"i" "n" "l"'
      - grid-template-columns: 1fr
      - grid-template-rows: auto auto auto
      - row-gap: 4px
    name:
      - font-size: 14px
      - font-weight: 500
      - text-align: center
      - color: var(--contrast8)
    label:
      - font-size: 12px
      - text-align: center
      - color: var(--contrast15)
    icon:
      - width: 75px
      - height: 75px
      - color: var(--contrast20)
    entity_picture:
      - width: 75px
      - height: 75px
      - border-radius: 50%
      - align-self: center
      - justify-self: center
  name: |
    [[[ return entity.attributes.friendly_name ]]]
  label: |
    [[[
      return entity.state === 'home'
        ? states['sensor.j_watch_area'].state
        : 'Away';
    ]]]

# type: custom:button-card
#  template: presence_tile
#  entity: person.j
#  entity_picture: /local/person.j.jpg

climate_card:
  variables:
    entity: ''
    name: ''
    fan_script: ''
  show_name: true
  show_state: false
  show_icon: true
  icon: mdi:thermostat
  name: '[[[ return variables.name ]]]'
  entity: '[[[ return variables.entity ]]]'
  styles:
    card:
      - padding: 12px
      - border-radius: 16px
      - height: auto
      - background-color: >
          [[[
            const state = states[variables.entity].state;
            if (state === 'cool') return 'var(--blue)';
            if (state === 'heat') return 'var(--red)';
            if (state === 'heat_cool') return 'var(--green)';
            return 'var(--contrast2)';
          ]]]
      - color: black
    name:
      - font-size: 16px
      - font-weight: bold
  custom_fields:
    controls: >
      [[[
        const fanMode = states[variables.entity].attributes.fan_mode;
        const icons = {
          'high': 'mdi:fan-speed-3',
          'medium': 'mdi:fan-speed-2',
          'mid': 'mdi:fan-speed-2',
          'low': 'mdi:fan-speed-1',
          'auto': 'mdi:fan-plus'
        };
        const icon = icons[fanMode] || 'mdi:fan';
        return `<ha-icon icon="${icon}" style="color: var(--blue); height: 26px; width: 26px; margin-top: 8px;"></ha-icon>`;
      ]]]
  tap_action:
    action: more-info

#  - type: custom:button-card
#    template: climate_card
#    variables:
#      entity: climate.liad_ac
#      name: Room2
#      fan_script: script.liad_fan_speed

camera_tile_card:
  type: custom:button-card
  entity: this.entity_id
  tap_action:
    action: more-info
  hold_action:
    action: more-info
  show_icon: false
  show_name: true
  show_state: false
  name: "[[[ return entity.attributes.friendly_name || 'Camera'; ]]]"
  styles:
    card:
      - border-radius: 20px
      - border-style: none
      - overflow: hidden
      - box-shadow: 0px 0px 10px -6px rgba(0, 0, 0, 0.4)
      - padding: 0
      - height: 200px
      - position: relative
    name:
      - position: absolute
      - bottom: 0
      - left: 0
      - right: 0
      - background: rgba(0, 0, 0, 0.4)
      - color: white
      - font-size: 14px
      - font-weight: 500
      - padding: 8px
      - text-align: left
  custom_fields:
    camera: |
      [[[
        return `<img src="/api/camera_proxy/${entity.entity_id}?token=${entity.attributes.access_token}" style='width: 100%; height: 100%; object-fit: cover;' />`;
      ]]]

thermostat_card:
  type: custom:button-card
  entity: this.entity_id
  show_icon: false
  show_name: true
  show_state: false
  styles:
    card:
      - border-radius: 24px
      - padding: 16px
      - background: var(--card-background-color)
      - box-shadow: var(--ha-card-box-shadow)
      - display: flex
      - flex-direction: column
      - align-items: center
      - justify-content: center
      - height: 300px
      - width: 280px
    name:
      - font-size: 22px
      - font-weight: bold
      - text-align: center
      - margin-bottom: 8px
  custom_fields:
    thermostat:
      card:
        type: custom:thermostat-card
        entity: '[[[ return entity.entity_id ]]]'
        name: false
        step: 1
        highlight_tap: true
        show_current_temperature: true
        show_temperature_control: true
        control:
          - _name: Heat
            _hvac_mode: heat
          - _name: Cool
            _hvac_mode: cool
          - _name: Auto
            _hvac_mode: heat_cool
        style: |
          ha-card {
            box-shadow: none;
            background: none;
          }
  layout: vertical

rounded_with_count_below:
  show_icon: true
  show_name: true
  show_state: true
  styles:
    card:
      - border-radius: 24px
      - padding: 8px 12px
      - background: var(--card-background-color)
      - box-shadow: var(--ha-card-box-shadow)
      - display: flex
      - align-items: center
      - justify-content: flex-start
      - height: 80px
      - width: 100px
    icon:
      - width: 48px
      - height: 48px
      - border-radius: 50%
      - background-color: var(--button-card-light-color, #fbe16c)
      - color: black
      - font-size: 20px
      - display: flex
      - align-items: center
      - justify-content: center
    name:
      - font-size: 16px
      - font-weight: bold
      - margin-left: 12px
      - text-align: left
    state:
      - font-size: 14px
      - color: var(--secondary-text-color)
      - margin-left: 12px
      - text-align: left
      - margin-top: -4px
  layout: icon_name_state
  state_display: |
    [[[
      if (entity.attributes.entity_id) {
        let onCount = 0;
        entity.attributes.entity_id.forEach(eid => {
          const ent = states[eid];
          if (ent && ent.state === 'on') onCount++;
        });
        return onCount + " On";
      }
      return entity.state;
    ]]]

# Example usage:
#type: custom:button-card
#template: rounded_with_count_below
#entity: light.kitchen_lights  # group of lights
#name: Kitchen Lights
#icon: mdi:lightbulb-outline

modern_alarm_panel:
  type: custom:button-card
  entity: this.entity_id
  show_icon: false
  show_name: false
  show_state: false
  styles:
    card:
      - border-radius: 24px
      - padding: 16px
      - background: var(--card-background-color)
      - box-shadow: var(--ha-card-box-shadow)
      - display: flex
      - flex-direction: column
      - align-items: flex-start
      - justify-content: flex-start
      - gap: 16px
      - width: 300px
      - height: 300px
  custom_fields:
    header:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: '[[[ return entity.entity_id ]]]'
            icon: mdi:lock
            show_icon: true
            show_name: true
            show_state: true
            styles:
              card:
                - background: none
                - box-shadow: none
                - padding: 0
                - display: flex
                - flex-direction: row
                - align-items: center
              icon:
                - background: #f1f1f1
                - border-radius: 50%
                - width: 48px
                - height: 48px
                - color: black
              name:
                - font-size: 20px
                - font-weight: bold
                - margin-left: 12px
              state:
                - font-size: 16px
                - color: var(--secondary-text-color)
                - margin-left: 12px

    actions:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: '[[[ return entity.entity_id ]]]'
            name: Disarm
            icon: mdi:shield-off
            tap_action:
              action: call-service
              service: alarm_control_panel.alarm_disarm
              data:
                entity_id: '[[[ return entity.entity_id ]]]'
            styles:
              card:
                - border-radius: 50%
                - background: "#f1f1f1"
                - width: 72px
                - height: 72px
                - display: flex
                - flex-direction: column
                - align-items: center
                - justify-content: center
              icon:
                - color: black
                - width: 32px
                - height: 32px
              name:
                - margin-top: 4px
                - font-size: 14px
          - type: custom:button-card
            entity: '[[[ return entity.entity_id ]]]'
            name: Arm stay
            icon: mdi:shield-home
            tap_action:
              action: call-service
              service: alarm_control_panel.alarm_arm_home
              data:
                entity_id: '[[[ return entity.entity_id ]]]'
            styles:
              card:
                - border-radius: 50%
                - background: "#f1f1f1"
                - width: 72px
                - height: 72px
                - display: flex
                - flex-direction: column
                - align-items: center
                - justify-content: center
              icon:
                - color: black
                - width: 32px
                - height: 32px
              name:
                - margin-top: 4px
                - font-size: 14px
          - type: custom:button-card
            entity: '[[[ return entity.entity_id ]]]'
            name: Arm away
            icon: mdi:lock
            tap_action:
              action: call-service
              service: alarm_control_panel.alarm_arm_away
              data:
                entity_id: '[[[ return entity.entity_id ]]]'
            styles:
              card:
                - border-radius: 50%
                - background: |
                    [[[
                      return entity.state == 'armed_away' ? "#F28B39" : "#f1f1f1";
                    ]]]
                - width: 72px
                - height: 72px
                - display: flex
                - flex-direction: column
                - align-items: center
                - justify-content: center
              icon:
                - color: |
                    [[[
                      return entity.state == 'armed_away' ? "white" : "black";
                    ]]]
                - width: 32px
                - height: 32px
              name:
                - margin-top: 4px
                - font-size: 14px
                - color: black

# Example usage:
#type: custom:button-card
#template: modern_alarm_panel
#entity: alarm_control_panel.security

ai_tip:
  variables:
    tip_text: "Your Tip Text"
    tip_image: "/local/your_image.png"
    tip_icon: "mdi:lightbulb-on-outline"
    tip_icon_background: "#D1C4E9"
  show_icon: false
  show_name: false
  show_state: false
  styles:
    card:
      - border-radius: 24px
      - background: var(--card-background-color)
      - padding: 24px
      - box-shadow: var(--ha-card-box-shadow)
      - display: flex
      - flex-direction: column
      - align-items: flex-start
      - justify-content: flex-start
      - gap: 16px
      - width: 300px
      - height: 200px
      - position: relative
  custom_fields:
    content:
      card:
        type: custom:button-card
        styles:
          card:
            - background: none
            - box-shadow: none
            - display: flex
            - flex-direction: row
            - align-items: center
            - justify-content: flex-start
            - gap: 16px
            - padding: 0
        custom_fields:
          icon:
            card:
              type: custom:button-card
              icon: "[[[ return variables.tip_icon ]]]"
              styles:
                card:
                  - background: "[[[ return variables.tip_icon_background ]]]"
                  - border-radius: 50%
                  - width: 48px
                  - height: 48px
                  - display: flex
                  - align-items: center
                  - justify-content: center
                icon:
                  - color: white
                  - width: 24px
                  - height: 24px
          text:
            card:
              type: custom:button-card
              content: |
                [[[ return variables.tip_text ]]]
              style:
                .: |
                  ha-card {
                    background: none;
                    box-shadow: none;
                    padding: 0;
                  }
                p:
                  font-size: 18px
                  color: var(--primary-text-color)
                  margin: 0
    image:
      card:
        type: picture
        image: "[[[ return variables.tip_image ]]]"
        style:
          .: |
            ha-card {
              border-radius: 0px;
              box-shadow: none;
              background: none;
            }

# Example usage:
#type: custom:button-card
#template: ai_tip
#variables:
#  tip_text: >
#    Set up a bedtime routine so your lights know when it’s time to chill.
#    Because even your gadgets deserve a break.
#  tip_icon: mdi:sparkles
#  tip_icon_background: "#D1C4E9"
#  tip_image: "/local/tip.png"


ad_card:
  variables:
    ad_title: "Your Title Here"
    ad_subtitle: "Your Subtitle Here"
    ad_button_text: "Button Text"
    ad_background: "/local/your_background.png"
  show_icon: false
  show_name: false
  show_state: false
  styles:
    card:
      - border-radius: 24px
      - background: |
          center / cover no-repeat url("[[[ return variables.ad_background ]]]")
      - padding: 24px
      - display: flex
      - flex-direction: column
      - justify-content: center
      - align-items: center
      - box-shadow: var(--ha-card-box-shadow)
      - height: 200px
      - width: 300px
      - position: relative
      - overflow: hidden
  custom_fields:

    text:
      card:
        type: custom:button-card
        label: |
          ## [[[ return variables.ad_title ]]]
          [[[ return variables.ad_subtitle ]]]
        style:
          .: |
            ha-card {
              background: none;
              box-shadow: none;
              padding: 0;
              text-align: center;
            }
          h2:
            font-size: 24px
            font-weight: bold
            margin: 0 0 8px 0
            color: var(--primary-text-color)
          p:
            font-size: 16px
            margin: 0
            color: var(--secondary-text-color)
    button:
      card:
        type: custom:button-card
        name: "[[[ return variables.ad_button_text ]]]"
        tap_action:
          action: navigate
          navigation_path: /oasira-premium
        styles:
          card:
            - background: var(--primary-text-color)
            - color: var(--primary-background-color)
            - border-radius: 32px
            - font-size: 16px
            - font-weight: bold
            - height: 48px
            - width: 200px
            - margin-top: 16px
            - padding: 0 16px

# Example usage:
#type: custom:button-card
#template: ad_card
#variables:
#  ad_title: "Get 1 month of Premium now!"
#  ad_subtitle: "Extended activity history, unlimited automation, improved security"
#  ad_button_text: "Activate for FREE"
#  ad_background: "/local/ad_background.png"